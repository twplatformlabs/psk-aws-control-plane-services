image:
  repository: registry.k8s.io/metrics-server/metrics-server
  pullPolicy: Always

serviceAccount:
  create: true
  annotations: {}

rbac:
  create: true

apiService:
  create: true
  annotations: {}
  insecureSkipTLSVerify: true
  caBundle: ""

commonLabels: {}
podLabels: {}
podAnnotations: {}

podSecurityContext: {}

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 10001
  runAsGroup: 10001
  seccompProfile:
    type: RuntimeDefault
  # capabilities:
  #   drop:
  #     - ALL
  #   add:
  #     - CAP_NET_BIND_SERVICE

priorityClassName: system-cluster-critical

containerPort: 10250

replicas: 1

updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1

podDisruptionBudget:
  enabled: false

defaultArgs:
  - --cert-dir=/tmp
  - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
  - --kubelet-use-node-status-port
  - --metric-resolution=15s

livenessProbe:
  httpGet:
    path: /livez
    port: https
    scheme: HTTPS
  initialDelaySeconds: 0
  periodSeconds: 10
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /readyz
    port: https
    scheme: HTTPS
  initialDelaySeconds: 20
  periodSeconds: 10
  failureThreshold: 3

service:
  type: ClusterIP
  port: 443
  annotations: {}
  labels:
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: "metrics-server"

addonResizer:
  enabled: false

metrics:
  enabled: false

serviceMonitor:
  enabled: false
  additionalLabels: {}
  interval: 1m
  scrapeTimeout: 10s
  metricRelabelings: []
  relabelings: []

resources:
  requests:
    cpu: 100m
    memory: 200Mi
  limits:
    cpu: 200m
    memory: 250Mi

nodeSelector:
  nodegroup: management-arm-rkt-mng

tolerations:
  - key: "dedicated"
    operator: "Equal"
    value: "management"
    effect: "NoSchedule"

affinity: {}

topologySpreadConstraints: []
